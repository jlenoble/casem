// Generated from /home/jason/Projets/casem/src/static/antlr4/grammars/Calc.g4 by ANTLR 4.7
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u001f\u00d0\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0003\u0002\u0003\u0002\u0007\u0002@\n\u0002\f\u0002\u000e",
    "\u0002C\u000b\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0007\u0003",
    "H\n\u0003\f\u0003\u000e\u0003K\u000b\u0003\u0005\u0003M\n\u0003\u0003",
    "\u0004\u0003\u0004\u0007\u0004Q\n\u0004\f\u0004\u000e\u0004T\u000b\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0005\u0005\u0005Y\n\u0005\u0003\u0005",
    "\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006",
    "\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b",
    "\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000e",
    "\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010",
    "\u0003\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0012",
    "\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0014",
    "\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0015",
    "\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017",
    "\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017",
    "\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u001a\u0003\u001a",
    "\u0003\u001a\u0003\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c",
    "\u0003\u001c\u0003\u001c\u0003\u001d\u0003\u001d\u0003\u001e\u0003\u001e",
    "\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003R\u0002\u001f",
    "\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t",
    "\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010",
    "\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018/\u0019",
    "1\u001a3\u001b5\u001c7\u001d9\u001e;\u001f\u0003\u0002\u0006\u0004\u0002",
    "C\\c|\u0005\u00022;C\\c|\u0003\u00023;\u0003\u00022;\u0002\u00d4\u0002",
    "\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002",
    "\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002",
    "\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002",
    "\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002",
    "\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002",
    "\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002",
    "\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002",
    "\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002",
    "#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003",
    "\u0002\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002",
    "\u0002\u0002\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002\u0002",
    "\u0002\u00021\u0003\u0002\u0002\u0002\u00023\u0003\u0002\u0002\u0002",
    "\u00025\u0003\u0002\u0002\u0002\u00027\u0003\u0002\u0002\u0002\u0002",
    "9\u0003\u0002\u0002\u0002\u0002;\u0003\u0002\u0002\u0002\u0003=\u0003",
    "\u0002\u0002\u0002\u0005L\u0003\u0002\u0002\u0002\u0007N\u0003\u0002",
    "\u0002\u0002\tX\u0003\u0002\u0002\u0002\u000b\\\u0003\u0002\u0002\u0002",
    "\rb\u0003\u0002\u0002\u0002\u000fi\u0003\u0002\u0002\u0002\u0011k\u0003",
    "\u0002\u0002\u0002\u0013o\u0003\u0002\u0002\u0002\u0015v\u0003\u0002",
    "\u0002\u0002\u0017}\u0003\u0002\u0002\u0002\u0019\u007f\u0003\u0002",
    "\u0002\u0002\u001b\u0081\u0003\u0002\u0002\u0002\u001d\u0087\u0003\u0002",
    "\u0002\u0002\u001f\u0089\u0003\u0002\u0002\u0002!\u008b\u0003\u0002",
    "\u0002\u0002#\u008f\u0003\u0002\u0002\u0002%\u0091\u0003\u0002\u0002",
    "\u0002\'\u0093\u0003\u0002\u0002\u0002)\u009b\u0003\u0002\u0002\u0002",
    "+\u00a1\u0003\u0002\u0002\u0002-\u00aa\u0003\u0002\u0002\u0002/\u00b4",
    "\u0003\u0002\u0002\u00021\u00b6\u0003\u0002\u0002\u00023\u00b8\u0003",
    "\u0002\u0002\u00025\u00bc\u0003\u0002\u0002\u00027\u00c2\u0003\u0002",
    "\u0002\u00029\u00c8\u0003\u0002\u0002\u0002;\u00ca\u0003\u0002\u0002",
    "\u0002=A\t\u0002\u0002\u0002>@\t\u0003\u0002\u0002?>\u0003\u0002\u0002",
    "\u0002@C\u0003\u0002\u0002\u0002A?\u0003\u0002\u0002\u0002AB\u0003\u0002",
    "\u0002\u0002B\u0004\u0003\u0002\u0002\u0002CA\u0003\u0002\u0002\u0002",
    "DM\u00072\u0002\u0002EI\t\u0004\u0002\u0002FH\t\u0005\u0002\u0002GF",
    "\u0003\u0002\u0002\u0002HK\u0003\u0002\u0002\u0002IG\u0003\u0002\u0002",
    "\u0002IJ\u0003\u0002\u0002\u0002JM\u0003\u0002\u0002\u0002KI\u0003\u0002",
    "\u0002\u0002LD\u0003\u0002\u0002\u0002LE\u0003\u0002\u0002\u0002M\u0006",
    "\u0003\u0002\u0002\u0002NR\u0007$\u0002\u0002OQ\u000b\u0002\u0002\u0002",
    "PO\u0003\u0002\u0002\u0002QT\u0003\u0002\u0002\u0002RS\u0003\u0002\u0002",
    "\u0002RP\u0003\u0002\u0002\u0002SU\u0003\u0002\u0002\u0002TR\u0003\u0002",
    "\u0002\u0002UV\u0007$\u0002\u0002V\b\u0003\u0002\u0002\u0002WY\u0007",
    "\u000f\u0002\u0002XW\u0003\u0002\u0002\u0002XY\u0003\u0002\u0002\u0002",
    "YZ\u0003\u0002\u0002\u0002Z[\u0007\f\u0002\u0002[\n\u0003\u0002\u0002",
    "\u0002\\]\u0007^\u0002\u0002]^\u0007C\u0002\u0002^_\u0007d\u0002\u0002",
    "_`\u0007u\u0002\u0002`a\u0007\"\u0002\u0002a\f\u0003\u0002\u0002\u0002",
    "bc\u0007^\u0002\u0002cd\u0007c\u0002\u0002de\u0007e\u0002\u0002ef\u0007",
    "q\u0002\u0002fg\u0007u\u0002\u0002gh\u0007\"\u0002\u0002h\u000e\u0003",
    "\u0002\u0002\u0002ij\u0007-\u0002\u0002j\u0010\u0003\u0002\u0002\u0002",
    "kl\u0007^\u0002\u0002lm\u0007/\u0002\u0002mn\u0007@\u0002\u0002n\u0012",
    "\u0003\u0002\u0002\u0002op\u0007^\u0002\u0002pq\u0007c\u0002\u0002q",
    "r\u0007u\u0002\u0002rs\u0007k\u0002\u0002st\u0007p\u0002\u0002tu\u0007",
    "\"\u0002\u0002u\u0014\u0003\u0002\u0002\u0002vw\u0007^\u0002\u0002w",
    "x\u0007c\u0002\u0002xy\u0007v\u0002\u0002yz\u0007c\u0002\u0002z{\u0007",
    "p\u0002\u0002{|\u0007\"\u0002\u0002|\u0016\u0003\u0002\u0002\u0002}",
    "~\u0007<\u0002\u0002~\u0018\u0003\u0002\u0002\u0002\u007f\u0080\u0007",
    ".\u0002\u0002\u0080\u001a\u0003\u0002\u0002\u0002\u0081\u0082\u0007",
    "^\u0002\u0002\u0082\u0083\u0007e\u0002\u0002\u0083\u0084\u0007q\u0002",
    "\u0002\u0084\u0085\u0007u\u0002\u0002\u0085\u0086\u0007\"\u0002\u0002",
    "\u0086\u001c\u0003\u0002\u0002\u0002\u0087\u0088\u0007+\u0002\u0002",
    "\u0088\u001e\u0003\u0002\u0002\u0002\u0089\u008a\u00071\u0002\u0002",
    "\u008a \u0003\u0002\u0002\u0002\u008b\u008c\u0007^\u0002\u0002\u008c",
    "\u008d\u0007F\u0002\u0002\u008d\u008e\u0007q\u0002\u0002\u008e\"\u0003",
    "\u0002\u0002\u0002\u008f\u0090\u00070\u0002\u0002\u0090$\u0003\u0002",
    "\u0002\u0002\u0091\u0092\u0007?\u0002\u0002\u0092&\u0003\u0002\u0002",
    "\u0002\u0093\u0094\u0007^\u0002\u0002\u0094\u0095\u0007I\u0002\u0002",
    "\u0095\u0096\u0007g\u0002\u0002\u0096\u0097\u0007v\u0002\u0002\u0097",
    "\u0098\u0007m\u0002\u0002\u0098\u0099\u0007g\u0002\u0002\u0099\u009a",
    "\u0007{\u0002\u0002\u009a(\u0003\u0002\u0002\u0002\u009b\u009c\u0007",
    "^\u0002\u0002\u009c\u009d\u0007K\u0002\u0002\u009d\u009e\u0007p\u0002",
    "\u0002\u009e\u009f\u0007v\u0002\u0002\u009f\u00a0\u0007\"\u0002\u0002",
    "\u00a0*\u0003\u0002\u0002\u0002\u00a1\u00a2\u0007^\u0002\u0002\u00a2",
    "\u00a3\u0007N\u0002\u0002\u00a3\u00a4\u0007q\u0002\u0002\u00a4\u00a5",
    "\u0007e\u0002\u0002\u00a5\u00a6\u0007c\u0002\u0002\u00a6\u00a7\u0007",
    "v\u0002\u0002\u00a7\u00a8\u0007g\u0002\u0002\u00a8\u00a9\u0007\"\u0002",
    "\u0002\u00a9,\u0003\u0002\u0002\u0002\u00aa\u00ab\u0007^\u0002\u0002",
    "\u00ab\u00ac\u0007N\u0002\u0002\u00ac\u00ad\u0007r\u0002\u0002\u00ad",
    "\u00ae\u0007Y\u0002\u0002\u00ae\u00af\u0007j\u0002\u0002\u00af\u00b0",
    "\u0007k\u0002\u0002\u00b0\u00b1\u0007n\u0002\u0002\u00b1\u00b2\u0007",
    "g\u0002\u0002\u00b2\u00b3\u0007\"\u0002\u0002\u00b3.\u0003\u0002\u0002",
    "\u0002\u00b4\u00b5\u0007,\u0002\u0002\u00b50\u0003\u0002\u0002\u0002",
    "\u00b6\u00b7\u0007*\u0002\u0002\u00b72\u0003\u0002\u0002\u0002\u00b8",
    "\u00b9\u0007^\u0002\u0002\u00b9\u00ba\u0007R\u0002\u0002\u00ba\u00bb",
    "\u0007k\u0002\u0002\u00bb4\u0003\u0002\u0002\u0002\u00bc\u00bd\u0007",
    "^\u0002\u0002\u00bd\u00be\u0007u\u0002\u0002\u00be\u00bf\u0007k\u0002",
    "\u0002\u00bf\u00c0\u0007p\u0002\u0002\u00c0\u00c1\u0007\"\u0002\u0002",
    "\u00c16\u0003\u0002\u0002\u0002\u00c2\u00c3\u0007^\u0002\u0002\u00c3",
    "\u00c4\u0007u\u0002\u0002\u00c4\u00c5\u0007s\u0002\u0002\u00c5\u00c6",
    "\u0007t\u0002\u0002\u00c6\u00c7\u0007v\u0002\u0002\u00c78\u0003\u0002",
    "\u0002\u0002\u00c8\u00c9\u0007/\u0002\u0002\u00c9:\u0003\u0002\u0002",
    "\u0002\u00ca\u00cb\u0007^\u0002\u0002\u00cb\u00cc\u0007v\u0002\u0002",
    "\u00cc\u00cd\u0007c\u0002\u0002\u00cd\u00ce\u0007p\u0002\u0002\u00ce",
    "\u00cf\u0007\"\u0002\u0002\u00cf<\u0003\u0002\u0002\u0002\b\u0002AI",
    "LRX\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function CalcLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

CalcLexer.prototype = Object.create(antlr4.Lexer.prototype);
CalcLexer.prototype.constructor = CalcLexer;

CalcLexer.EOF = antlr4.Token.EOF;
CalcLexer.ID = 1;
CalcLexer.UINT = 2;
CalcLexer.STRING = 3;
CalcLexer.NEWLINE = 4;
CalcLexer.ABS = 5;
CalcLexer.ACOS = 6;
CalcLexer.ADD = 7;
CalcLexer.ARROW = 8;
CalcLexer.ASIN = 9;
CalcLexer.ATAN = 10;
CalcLexer.COLON = 11;
CalcLexer.COMMA = 12;
CalcLexer.COS = 13;
CalcLexer.CPAR = 14;
CalcLexer.DIV = 15;
CalcLexer.DO = 16;
CalcLexer.DOT = 17;
CalcLexer.EQUAL = 18;
CalcLexer.GETKEY = 19;
CalcLexer.INT = 20;
CalcLexer.LOCATE = 21;
CalcLexer.LOOPWHILE = 22;
CalcLexer.MUL = 23;
CalcLexer.OPAR = 24;
CalcLexer.PI = 25;
CalcLexer.SIN = 26;
CalcLexer.SQRT = 27;
CalcLexer.SUB = 28;
CalcLexer.TAN = 29;

CalcLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

CalcLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

CalcLexer.prototype.literalNames = [ null, null, null, null, null, "'\\Abs '", 
                                     "'\\acos '", "'+'", "'\\->'", "'\\asin '", 
                                     "'\\atan '", "':'", "','", "'\\cos '", 
                                     "')'", "'/'", "'\\Do'", "'.'", "'='", 
                                     "'\\Getkey'", "'\\Int '", "'\\Locate '", 
                                     "'\\LpWhile '", "'*'", "'('", "'\\Pi'", 
                                     "'\\sin '", "'\\sqrt'", "'-'", "'\\tan '" ];

CalcLexer.prototype.symbolicNames = [ null, "ID", "UINT", "STRING", "NEWLINE", 
                                      "ABS", "ACOS", "ADD", "ARROW", "ASIN", 
                                      "ATAN", "COLON", "COMMA", "COS", "CPAR", 
                                      "DIV", "DO", "DOT", "EQUAL", "GETKEY", 
                                      "INT", "LOCATE", "LOOPWHILE", "MUL", 
                                      "OPAR", "PI", "SIN", "SQRT", "SUB", 
                                      "TAN" ];

CalcLexer.prototype.ruleNames = [ "ID", "UINT", "STRING", "NEWLINE", "ABS", 
                                  "ACOS", "ADD", "ARROW", "ASIN", "ATAN", 
                                  "COLON", "COMMA", "COS", "CPAR", "DIV", 
                                  "DO", "DOT", "EQUAL", "GETKEY", "INT", 
                                  "LOCATE", "LOOPWHILE", "MUL", "OPAR", 
                                  "PI", "SIN", "SQRT", "SUB", "TAN" ];

CalcLexer.prototype.grammarFileName = "Calc.g4";



exports.CalcLexer = CalcLexer;

